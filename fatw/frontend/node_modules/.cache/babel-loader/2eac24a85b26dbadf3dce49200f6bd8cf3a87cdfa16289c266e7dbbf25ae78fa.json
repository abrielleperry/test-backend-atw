{"ast":null,"code":"var _jsxFileName = \"/root/test-backend-atw/fatw/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport FestivalList from \"./components/FestivalList\";\nimport SearchBox from \"./components/SearchBox\";\nimport Header from \"./components/Header\";\nimport { parseISO, startOfDay } from \"date-fns\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fetchFestivals = async (query, page, setFestivals, setTotalPages, fetchAll = false) => {\n  const endpoint = fetchAll ? `http://localhost:5001/festivals?all=true` : query ? `http://localhost:5001/api/search-festivals?name=${query}&page=${page}&limit=5` : `http://localhost:5001/festivals?page=${page}&limit=5`;\n  try {\n    const response = await fetch(endpoint);\n    const data = await response.json();\n    setFestivals(data.data);\n    if (!fetchAll) setTotalPages(data.totalPages);\n  } catch (error) {\n    console.error(\"Error fetching festivals:\", error);\n  }\n};\nconst App = () => {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [festivals, setFestivals] = useState([]);\n  const [filteredFestivals, setFilteredFestivals] = useState([]);\n  const [displayedFestivals, setDisplayedFestivals] = useState([]);\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    fetchFestivals(setFestivals, setTotalPages, false, filterDate);\n  });\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Festival Explorer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n              query: query,\n              setQuery: setQuery,\n              handleSearch: handleSearch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FestivalList, {\n              festivals: displayedFestivals\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"OoCvxEwneogZhMVsPvfz5d4UOcw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","FestivalList","SearchBox","Header","parseISO","startOfDay","jsxDEV","_jsxDEV","Fragment","_Fragment","fetchFestivals","query","page","setFestivals","setTotalPages","fetchAll","endpoint","response","fetch","data","json","totalPages","error","console","App","_s","setQuery","festivals","filteredFestivals","setFilteredFestivals","displayedFestivals","setDisplayedFestivals","setPage","filterDate","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","handleSearch","_c","$RefreshReg$"],"sources":["/root/test-backend-atw/fatw/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport FestivalList from \"./components/FestivalList\";\nimport SearchBox from \"./components/SearchBox\";\nimport Header from \"./components/Header\";\nimport { parseISO, startOfDay } from \"date-fns\";\n\nconst fetchFestivals = async (query, page, setFestivals, setTotalPages, fetchAll = false) => {\n    const endpoint = fetchAll\n        ? `http://localhost:5001/festivals?all=true`\n        : query\n        ? `http://localhost:5001/api/search-festivals?name=${query}&page=${page}&limit=5`\n        : `http://localhost:5001/festivals?page=${page}&limit=5`;\n\n    try {\n        const response = await fetch(endpoint);\n        const data = await response.json();\n        setFestivals(data.data);\n        if (!fetchAll) setTotalPages(data.totalPages);\n    } catch (error) {\n        console.error(\"Error fetching festivals:\", error);\n    }\n};\n\nconst App = () => {\n    const [query, setQuery] = useState(\"\");\n    const [festivals, setFestivals] = useState([]);\n    const [filteredFestivals, setFilteredFestivals] = useState([]);\n    const [displayedFestivals, setDisplayedFestivals] = useState([]);\n    const [page, setPage] = useState(1);\n\n\n\n\n\n    useEffect(() => {\n        fetchFestivals(setFestivals, setTotalPages, false, filterDate);\n    });\n\n    return (\n        <Router>\n            <Header />\n            <main>\n                <Routes>\n                    <Route\n                        path=\"/\"\n                        element={\n                            <>\n                                <h1>Festival Explorer</h1>\n                                <SearchBox query={query} setQuery={setQuery} handleSearch={handleSearch} />\n                                <FestivalList festivals={displayedFestivals} />\n                            </>\n                        }\n                    />\n                </Routes>\n            </main>\n        </Router>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,QAAQ,EAAEC,UAAU,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,cAAc,GAAG,MAAAA,CAAOC,KAAK,EAAEC,IAAI,EAAEC,YAAY,EAAEC,aAAa,EAAEC,QAAQ,GAAG,KAAK,KAAK;EACzF,MAAMC,QAAQ,GAAGD,QAAQ,GACnB,0CAA0C,GAC1CJ,KAAK,GACL,mDAAmDA,KAAK,SAASC,IAAI,UAAU,GAC/E,wCAAwCA,IAAI,UAAU;EAE5D,IAAI;IACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAQ,CAAC;IACtC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCP,YAAY,CAACM,IAAI,CAACA,IAAI,CAAC;IACvB,IAAI,CAACJ,QAAQ,EAAED,aAAa,CAACK,IAAI,CAACE,UAAU,CAAC;EACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;EACrD;AACJ,CAAC;AAED,MAAME,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACd,KAAK,EAAEe,QAAQ,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgC,SAAS,EAAEd,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACiC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACmC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACiB,IAAI,EAAEoB,OAAO,CAAC,GAAGrC,QAAQ,CAAC,CAAC,CAAC;EAMnCC,SAAS,CAAC,MAAM;IACZc,cAAc,CAACG,YAAY,EAAEC,aAAa,EAAE,KAAK,EAAEmB,UAAU,CAAC;EAClE,CAAC,CAAC;EAEF,oBACI1B,OAAA,CAACT,MAAM;IAAAoC,QAAA,gBACH3B,OAAA,CAACJ,MAAM;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV/B,OAAA;MAAA2B,QAAA,eACI3B,OAAA,CAACR,MAAM;QAAAmC,QAAA,eACH3B,OAAA,CAACP,KAAK;UACFuC,IAAI,EAAC,GAAG;UACRC,OAAO,eACHjC,OAAA,CAAAE,SAAA;YAAAyB,QAAA,gBACI3B,OAAA;cAAA2B,QAAA,EAAI;YAAiB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1B/B,OAAA,CAACL,SAAS;cAACS,KAAK,EAAEA,KAAM;cAACe,QAAQ,EAAEA,QAAS;cAACe,YAAY,EAAEA;YAAa;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC3E/B,OAAA,CAACN,YAAY;cAAC0B,SAAS,EAAEG;YAAmB;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA,eACjD;QACL;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEjB,CAAC;AAACb,EAAA,CAlCID,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAoCT,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}