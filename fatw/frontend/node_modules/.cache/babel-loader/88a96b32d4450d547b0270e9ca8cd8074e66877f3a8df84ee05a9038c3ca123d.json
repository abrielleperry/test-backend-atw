{"ast":null,"code":"var _jsxFileName = \"/root/test-backend-atw/fatw/frontend/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./Card.module.css\";\nimport { format, parseISO, differenceInSeconds } from \"date-fns\";\n\n// define card component with props for festival details\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  name,\n  streetAddress,\n  addressLocality,\n  country,\n  startDate,\n  endDate,\n  image,\n  locationName\n}) => {\n  _s();\n  // state variables to store remaining time until the festival starts\n  const [remainingTime, setRemainingTime] = useState(\"\");\n\n  // func to format the startDate from 2024-12-01 -> Jan 12, 24\n  const formattedStartDate = startDate && !isNaN(Date.parse(startDate)) ? format(parseISO(startDate), \"MMM d, yy\") : \"TBD\";\n\n  // func to format the endDate from 2024-12-01 -> Jan 12, 24\n  const formattedEndDate = endDate && !isNaN(Date.parse(endDate)) ? format(parseISO(endDate), \"MMM d, yy\") : \"TBD\";\n\n  // updates countdown timer when component mounts or when startDate changes\n  useEffect(() => {\n    if (startDate) {\n      const interval = setInterval(() => {\n        // interval checks remaining time every second\n        const now = new Date(); // get current date and time\n        const start = parseISO(startDate);\n        const end = endDate ? parseISO(endDate) : null;\n        const diffInSeconds = differenceInSeconds(start, now); // calc diff in secs between now and startDate\n        const diffInSecondsToEnd = end ? differenceInSeconds(end, now) : null; // if endDate avilable, calc diff in secs until end date\n\n        // checks if start date has passed\n        if (diffInSeconds <= 0) {\n          // if endDate exists and still in future display message\n          if (end && diffInSecondsToEnd > 0) {\n            setRemainingTime(\"Already underway however you can still buy tickets!\");\n          } else {\n            // if past endDate display concluded message\n            setRemainingTime(\"This festival has already concluded!\");\n          }\n          clearInterval(interval);\n        } else {\n          // calc remaining days, hours, minutes, seconds\n          const days = Math.floor(diffInSeconds / (3600 * 24));\n          const hours = Math.floor(diffInSeconds % (3600 * 24) / 3600);\n          const minutes = Math.floor(diffInSeconds % 3600 / 60);\n          const seconds = diffInSeconds % 60;\n\n          // update remaining rtime state with calculated values\n          setRemainingTime(`Starts in ${days}d ${hours}h ${minutes}m ${seconds}s`);\n        }\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [startDate, endDate]);\n\n  // render card component with all festival details\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.card,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: styles.image,\n      src: image,\n      alt: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.name,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.locationName,\n      children: [\"at \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: locationName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.streetAddress,\n      children: [\" \", streetAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.addressDetails,\n      children: [\" \", addressLocality, \", \", country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.startDate,\n      children: [formattedStartDate, \" - \", formattedEndDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.countdown,\n      children: [\" \", remainingTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(Card, \"IdDaqiSoOFV+fA+W1ORyjxvXi+k=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","styles","format","parseISO","differenceInSeconds","jsxDEV","_jsxDEV","Card","name","streetAddress","addressLocality","country","startDate","endDate","image","locationName","_s","remainingTime","setRemainingTime","formattedStartDate","isNaN","Date","parse","formattedEndDate","interval","setInterval","now","start","end","diffInSeconds","diffInSecondsToEnd","clearInterval","days","Math","floor","hours","minutes","seconds","className","card","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","addressDetails","countdown","_c","$RefreshReg$"],"sources":["/root/test-backend-atw/fatw/frontend/src/components/Card.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./Card.module.css\";\nimport { format, parseISO, differenceInSeconds } from \"date-fns\";\n\n\n// define card component with props for festival details\nconst Card = ({ name, streetAddress, addressLocality, country, startDate, endDate, image, locationName }) => {\n\n    // state variables to store remaining time until the festival starts\n    const [remainingTime, setRemainingTime] = useState(\"\");\n\n    // func to format the startDate from 2024-12-01 -> Jan 12, 24\n    const formattedStartDate =\n        startDate && !isNaN(Date.parse(startDate))\n            ? format(parseISO(startDate), \"MMM d, yy\")\n            : \"TBD\";\n\n    // func to format the endDate from 2024-12-01 -> Jan 12, 24\n    const formattedEndDate =\n        endDate && !isNaN(Date.parse(endDate))\n            ? format(parseISO(endDate), \"MMM d, yy\")\n            : \"TBD\";\n\n    // updates countdown timer when component mounts or when startDate changes\n    useEffect(() => {\n        if (startDate) {\n            const interval = setInterval(() => { // interval checks remaining time every second\n                const now = new Date(); // get current date and time\n                const start = parseISO(startDate);\n                const end = endDate ? parseISO(endDate) : null;\n                const diffInSeconds = differenceInSeconds(start, now); // calc diff in secs between now and startDate\n                const diffInSecondsToEnd = end ? differenceInSeconds(end, now) : null; // if endDate avilable, calc diff in secs until end date\n\n                // checks if start date has passed\n                if (diffInSeconds <= 0) {\n                    // if endDate exists and still in future display message\n                    if (end && diffInSecondsToEnd > 0) {\n                        setRemainingTime(\"Already underway however you can still buy tickets!\");\n                    } else {\n                        // if past endDate display concluded message\n                        setRemainingTime(\"This festival has already concluded!\");\n                    }\n                    clearInterval(interval);\n                } else {\n                    // calc remaining days, hours, minutes, seconds\n                    const days = Math.floor(diffInSeconds / (3600 * 24));\n                    const hours = Math.floor((diffInSeconds % (3600 * 24)) / 3600);\n                    const minutes = Math.floor((diffInSeconds % 3600) / 60);\n                    const seconds = diffInSeconds % 60;\n\n                    // update remaining rtime state with calculated values\n                    setRemainingTime(`Starts in ${days}d ${hours}h ${minutes}m ${seconds}s`);\n                }\n            }, 1000);\n\n            return () => clearInterval(interval);\n        }\n    }, [startDate, endDate]);\n\n    // render card component with all festival details\n    return (\n        <div className={styles.card}>\n            <img className={styles.image} src={image} alt={name} />  {/* displays festival image*/}\n            <h2 className={styles.name}>{name}</h2> {/* displays name of festival */}\n            <p className={styles.locationName}>at <strong>{locationName}</strong></p> {/* displays name of venue */}\n            <p className={styles.streetAddress}> {streetAddress}</p> {/* displays street address */}\n            <p className={styles.addressDetails}> {addressLocality}, {country}</p> {/* displays state/provence and country */}\n            <p className={styles.startDate}>{formattedStartDate} - {formattedEndDate}</p> {/* displays start and end date */}\n            <p className={styles.countdown}> {remainingTime}</p> {/* displays time remaining until startDate */}\n        </div>\n    );\n};\n\nexport default Card;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}