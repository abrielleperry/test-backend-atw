{"ast":null,"code":"var _jsxFileName = \"/root/test-backend-atw/fatw/frontend/src/components/DateFilter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateFilter = ({\n  onDateChosen\n}) => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const handleDateChange = date => {\n    setSelectedDate(date);\n    if (onDateChosen) {\n      onDateChosen(date);\n    }\n  };\n  const handleClear = () => {\n    setSelectedDate(null);\n    if (onDateChosen) {\n      onDateChosen(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Filter by Start Date:\", /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: selectedDate,\n        onChange: handleDateChange,\n        dateFormat: \"MMMM d, yyyy\",\n        isClearable: true,\n        placeholderText: \"Select a date\",\n        onClear: handleClear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(DateFilter, \"rhrbPH1/NtfhiyDl62tZ0yGffOM=\");\n_c = DateFilter;\nexport default DateFilter;\nvar _c;\n$RefreshReg$(_c, \"DateFilter\");","map":{"version":3,"names":["React","useState","DatePicker","jsxDEV","_jsxDEV","DateFilter","onDateChosen","_s","selectedDate","setSelectedDate","handleDateChange","date","handleClear","children","selected","onChange","dateFormat","isClearable","placeholderText","onClear","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/test-backend-atw/fatw/frontend/src/components/DateFilter.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst DateFilter = ({ onDateChosen }) => {\n    const [selectedDate, setSelectedDate] = useState(null);\n\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n        if (onDateChosen) {\n            onDateChosen(date);\n        }\n    };\n\n    const handleClear = () => {\n        setSelectedDate(null);\n        if (onDateChosen) {\n            onDateChosen(null);\n        }\n    };\n\n    return (\n        <div>\n            <label>\n                Filter by Start Date:\n                <DatePicker\n                    selected={selectedDate}\n                    onChange={handleDateChange}\n                    dateFormat=\"MMMM d, yyyy\"\n                    isClearable\n                    placeholderText=\"Select a date\"\n                    onClear={handleClear}\n                />\n            </label>\n        </div>\n    );\n};\n\nexport default DateFilter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMS,gBAAgB,GAAIC,IAAI,IAAK;IAC/BF,eAAe,CAACE,IAAI,CAAC;IACrB,IAAIL,YAAY,EAAE;MACdA,YAAY,CAACK,IAAI,CAAC;IACtB;EACJ,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtBH,eAAe,CAAC,IAAI,CAAC;IACrB,IAAIH,YAAY,EAAE;MACdA,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC;EAED,oBACIF,OAAA;IAAAS,QAAA,eACIT,OAAA;MAAAS,QAAA,GAAO,uBAEH,eAAAT,OAAA,CAACF,UAAU;QACPY,QAAQ,EAAEN,YAAa;QACvBO,QAAQ,EAAEL,gBAAiB;QAC3BM,UAAU,EAAC,cAAc;QACzBC,WAAW;QACXC,eAAe,EAAC,eAAe;QAC/BC,OAAO,EAAEP;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAAChB,EAAA,CAhCIF,UAAU;AAAAmB,EAAA,GAAVnB,UAAU;AAkChB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}