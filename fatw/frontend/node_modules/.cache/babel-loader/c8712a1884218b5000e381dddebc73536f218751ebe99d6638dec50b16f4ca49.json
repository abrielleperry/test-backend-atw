{"ast":null,"code":"var _jsxFileName = \"/root/test-backend-atw/fatw/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport FestivalList from \"./components/FestivalList\";\nimport SearchBox from \"./components/SearchBox\";\nimport Header from \"./components/Header\";\nimport DateFilter from './components/DateFilter';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [festivals, setFestivals] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  useEffect(() => {\n    const fetchFestivals = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5001/festivals\");\n        setFestivals(response.data);\n      } catch (error) {\n        console.error(\"Error fetching festivals:\", error);\n      }\n    };\n    fetchFestivals();\n  }, []);\n  let debounceTimer;\n  const debounce = (func, delay) => {\n    clearTimeout(debounceTimer);\n    debounceTimer = setTimeout(func, delay);\n  };\n  const searchFestivalName = async () => {\n    debounce(async () => {\n      if (!query.trim()) {\n        setFestivals([]); // Clear results if the input is empty\n        return;\n      }\n      try {\n        const response = await axios.get(`http://localhost:5001/search?query=${query}`);\n        setFestivals(response.data);\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          setFestivals([]); // No results found\n        } else {\n          console.error(\"Error searching festivals:\", error);\n        }\n      }\n    }, 300);\n  };\n  const handleDateChange = async date => {\n    debounce(async () => {\n      if (!date) {\n        try {\n          const response = await axios.get('http://localhost:5001/festivals');\n          setFestivals(response.data); // Clear results if the date is cleared\n        } catch (error) {\n          console.error(\"Error fetching festivals:\", error);\n        }\n        return;\n      }\n      try {\n        const response = await axios.get(`http://localhost:5001/festivals?startDate=${date.toISOString().split('T')[0]}`);\n        setFestivals(response.data);\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          setFestivals([]); // No results found\n        } else {\n          console.error(\"Error fetching festivals by date:\", error);\n        }\n      }\n    }, 300);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Festival Explorer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n              query: query,\n              setQuery: setQuery,\n              searchFestivalName: searchFestivalName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(DateFilter, {\n              onDateChosen: handleDateChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FestivalList, {\n              festivals: festivals\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"OI2qytuvKUQD7d/d5DhKi+9Kp+I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","useState","useEffect","axios","FestivalList","SearchBox","Header","DateFilter","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","festivals","setFestivals","query","setQuery","fetchFestivals","response","get","data","error","console","debounceTimer","debounce","func","delay","clearTimeout","setTimeout","searchFestivalName","trim","status","handleDateChange","date","toISOString","split","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onDateChosen","_c","$RefreshReg$"],"sources":["/root/test-backend-atw/fatw/frontend/src/App.js"],"sourcesContent":["import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport FestivalList from \"./components/FestivalList\";\nimport SearchBox from \"./components/SearchBox\";\nimport Header from \"./components/Header\";\nimport DateFilter from './components/DateFilter';\n\nconst App = () => {\n    const [festivals, setFestivals] = useState([]);\n    const [query, setQuery] = useState(\"\");\n\n    useEffect(() => {\n        const fetchFestivals = async () => {\n            try {\n                const response = await axios.get(\"http://localhost:5001/festivals\");\n                setFestivals(response.data);\n            } catch (error) {\n                console.error(\"Error fetching festivals:\", error);\n            }\n        };\n\n        fetchFestivals();\n    }, []);\n\n    let debounceTimer;\n    const debounce = (func, delay) => {\n        clearTimeout(debounceTimer);\n        debounceTimer = setTimeout(func, delay);\n    };\n\n\n    const searchFestivalName = async () => {\n        debounce(async () => {\n            if (!query.trim()) {\n                setFestivals([]); // Clear results if the input is empty\n                return;\n            }\n        try {\n                const response = await axios.get(`http://localhost:5001/search?query=${query}`);\n                setFestivals(response.data);\n            } catch (error) {\n                if (error.response && error.response.status === 404) {\n                    setFestivals([]); // No results found\n                } else {\n                    console.error(\"Error searching festivals:\", error);\n                }\n            }\n        }, 300);\n    };\n\n    const handleDateChange = async (date) => {\n        debounce(async () => {\n            if (!date) {\n                try {\n                    const response = await axios.get('http://localhost:5001/festivals');\n                    setFestivals(response.data); // Clear results if the date is cleared\n                } catch (error) {\n                    console.error(\"Error fetching festivals:\", error);\n                }\n                return;\n            }\n            try {\n                const response = await axios.get(`http://localhost:5001/festivals?startDate=${date.toISOString().split('T')[0]}`);\n                setFestivals(response.data);\n            } catch (error) {\n                if (error.response && error.response.status === 404) {\n                    setFestivals([]); // No results found\n                } else {\n                    console.error(\"Error fetching festivals by date:\", error);\n                }\n            }\n        }, 300)\n    };\n\n\n    return (\n        <Router>\n            <Header />\n            <main>\n                <Routes>\n                    <Route\n                        path=\"/\"\n                        element={\n                            <>\n                                <h1>Festival Explorer</h1>\n                                <SearchBox query={query} setQuery={setQuery} searchFestivalName={searchFestivalName} />\n                                <DateFilter onDateChosen={handleDateChange} />\n                                <FestivalList festivals={festivals} />\n                            </>\n                        }\n                    />\n                </Routes>\n            </main>\n        </Router>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMgB,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,iCAAiC,CAAC;QACnEL,YAAY,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD;IACJ,CAAC;IAEDJ,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIM,aAAa;EACjB,MAAMC,QAAQ,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC9BC,YAAY,CAACJ,aAAa,CAAC;IAC3BA,aAAa,GAAGK,UAAU,CAACH,IAAI,EAAEC,KAAK,CAAC;EAC3C,CAAC;EAGD,MAAMG,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnCL,QAAQ,CAAC,YAAY;MACjB,IAAI,CAACT,KAAK,CAACe,IAAI,CAAC,CAAC,EAAE;QACfhB,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QAClB;MACJ;MACJ,IAAI;QACI,MAAMI,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,sCAAsCJ,KAAK,EAAE,CAAC;QAC/ED,YAAY,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZ,IAAIA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACH,QAAQ,CAACa,MAAM,KAAK,GAAG,EAAE;UACjDjB,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QACtB,CAAC,MAAM;UACHQ,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QACtD;MACJ;IACJ,CAAC,EAAE,GAAG,CAAC;EACX,CAAC;EAED,MAAMW,gBAAgB,GAAG,MAAOC,IAAI,IAAK;IACrCT,QAAQ,CAAC,YAAY;MACjB,IAAI,CAACS,IAAI,EAAE;QACP,IAAI;UACA,MAAMf,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,iCAAiC,CAAC;UACnEL,YAAY,CAACI,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACrD;QACA;MACJ;MACA,IAAI;QACA,MAAMH,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,6CAA6Cc,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACjHrB,YAAY,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZ,IAAIA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACH,QAAQ,CAACa,MAAM,KAAK,GAAG,EAAE;UACjDjB,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QACtB,CAAC,MAAM;UACHQ,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QAC7D;MACJ;IACJ,CAAC,EAAE,GAAG,CAAC;EACX,CAAC;EAGD,oBACIb,OAAA,CAACX,MAAM;IAAAuC,QAAA,gBACH5B,OAAA,CAACH,MAAM;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVhC,OAAA;MAAA4B,QAAA,eACI5B,OAAA,CAACV,MAAM;QAAAsC,QAAA,eACH5B,OAAA,CAACT,KAAK;UACF0C,IAAI,EAAC,GAAG;UACRC,OAAO,eACHlC,OAAA,CAAAE,SAAA;YAAA0B,QAAA,gBACI5B,OAAA;cAAA4B,QAAA,EAAI;YAAiB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1BhC,OAAA,CAACJ,SAAS;cAACW,KAAK,EAAEA,KAAM;cAACC,QAAQ,EAAEA,QAAS;cAACa,kBAAkB,EAAEA;YAAmB;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACvFhC,OAAA,CAACF,UAAU;cAACqC,YAAY,EAAEX;YAAiB;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC9ChC,OAAA,CAACL,YAAY;cAACU,SAAS,EAAEA;YAAU;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA,eACxC;QACL;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEjB,CAAC;AAAC5B,EAAA,CAxFID,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA0FT,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}